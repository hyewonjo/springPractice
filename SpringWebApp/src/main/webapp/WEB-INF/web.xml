<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<!-- 
	디폴트인 /WEB-INF/applicationContext.xml을 사용하기 위해 주석처리함.
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	 -->
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<!-- 
	리스너를 등록해서 루트 컨텍스트가 생성되게 만든다. 
	루트 컨텍스트에 서비스 계층과 데이터 액세스 계층을 포함해서 웹 환경과 직접 관련이 없는 모든 빈을 등록해둘 것이다.
	-->
	<listener>
		<display-name>ContextLoader</display-name>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<!-- 
	서블릿 웹 애플리케이션 컨텍스트 등록.
	이렇게 등록된 DispatcherServlet은 초기화 시에 서블릿 레벨의 웹 애플리케이션을 생성해준다.
	서블릿 컨텍스트가 사용할 설정파일 이름은 서블릿 이름 뒤에 -servlet.xml을 붙인 것이 디폴트이다. 
	 -->
	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 
		디폴트 설정 사용하기 위해 주석. 
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/app/*</url-pattern>
	</servlet-mapping>

</web-app>
